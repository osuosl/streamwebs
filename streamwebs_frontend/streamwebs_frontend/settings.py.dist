# -*- coding: UTF-8 -*-
# flake8: noqa

"""
Django settings for streamwebs project.

Generated by 'django-admin startproject' using Django 1.9.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
from django.utils.translation import ugettext_lazy as _
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_ROOT = os.path.join(BASE_DIR, 'streamwebs')
STATIC_ROOT = os.path.join(PROJECT_ROOT, 'static')
LOCALE_PATHS = [
    '../locale/',
]
MEDIA_ROOT = os.path.join(PROJECT_ROOT, 'media')
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '9$b3ov_dw6+&_(9w89p7&_&bsxzohtsf_7k!qyn-33696w#3&h'

# Google ('no-captcha') recaptcha
RECAPTCHA_PUBLIC_KEY = '6Lep3yQTAAAAANSLTu1MzZQzFD_KNpwYlfp3tPzM'
RECAPTCHA_PRIVATE_KEY = '6Lep3yQTAAAAAMRW7tnIDr2NUV77CWPRJ96wmWo3'

# Captcha type: one-click
NOCAPTCHA = True

# Google maps API key
GOOGLE_MAPS_API = 'AIzaSyCHaUYTiJJ2RZtqstos6VAFFUxN5I6saIA'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',
    'captcha',
    'pipeline',
    'streamwebs',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'streamwebs_frontend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
            ],
        },
    },
]


WSGI_APPLICATION = 'streamwebs_frontend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': os.environ['POSTGRES_DB'],
        'USER': os.environ['POSTGRES_USER'],
        'PASSWORD': os.environ['POSTGRES_PASSWORD'],
        'HOST': os.environ['PG_HOST'] if (os.environ.get('PG_HOST')) else 'postgres_host',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

ugettext = lambda s: s

TIME_ZONE = 'America/Los_Angeles'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'

# Media files (user-uploaded files, esp. images)
# https://docs.djangoproject.com/en/1.9/ref/models/fields/#django.db.models.FileField.storage

MEDIA_URL = '/media/'

# List of schools
# Format: each school listed in the SCHOOL_CHOICES tuple should be a tuple of
# two elements, the first being the value to be set on the user model and the
# second being the human-readable name. Below is a temporary entry that
# demonstrates how each school should be formatted. Keep in mind that if this
# list is empty, the testing of the "register" page in-browser will be limited
# since successful registration requires the selection of a school that
# actually exists in SCHOOL_CHOICES.
SCHOOL_CHOICES = (
    # Example:
    ('a', 'School A'),
)

# Pipeline settings for static files
# Used to package, compress, and minimize our bower dependencies (e.g. JQuery)
# https://axiacore.com/blog/effective-dependency-management-django-using-bower/
# http://django-pipeline.readthedocs.io/en/latest/installation.html

STATICFILES_STORAGE = 'pipeline.storage.PipelineCachedStorage'
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'pipeline.finders.PipelineFinder',
)

PIPELINE = {
    'JAVASCRIPT': {
        'libraries': {
            'source_filenames': {
                'streamwebs/bower_components/jquery/dist/jquery.js',
            },
            'output_filename': 'streamwebs/js/libs.min.js',
        }
    }
}

LANGUAGES = [
    ('en-us', 'English'),
    ('es', 'Español'),
    ('ru', 'Русский'),
    ('de', 'Deutsch'),
]
