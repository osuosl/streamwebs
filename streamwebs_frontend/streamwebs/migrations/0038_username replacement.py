# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-12-15 11:28
from __future__ import unicode_literals

from django.db import migrations, models
from django.core.validators import validate_email
from django.conf import settings
from django.core.mail import send_mail
from django.template.loader import render_to_string
from django.core.exceptions import ValidationError
from django.conf import settings

def username_remove_whitespace(apps, schema_editor):
    Users = apps.get_model("auth", "User")
    Group = apps.get_model('auth', 'Group')
	
    for user in Users.objects.all():
        user.username = ''.join(user.username.split()).lower()

        # Replace username with email
        if user.email is not None and user.email != "":
            if not user.groups.filter(name='super_admin').exists():
                if not user.is_superuser and not user.is_staff:
                    # Validate email address before replacing
                    try:
                        validate_email.__call__(user.email)
                    except ValidationError as ex:
                        print ("\n    WARNING: Could not send username migration email to '" +
							   str(user.username) + "' due to invalid email" +
							   "address '" + str(user.email) +"'")
                        pass
                    else:
                        # Email the user that their username has changed
                        if settings.SEND_EMAILS:
                            send_mail(
                                subject="Your streamwebs account has been updated",
                                message='',
                                html_message=render_to_string(
                                'registration/username_update.html',
                                {
                                    'user': user,
                                }),
                                from_email=settings.DEFAULT_FROM_EMAIL,
                                recipient_list=[user.email],
                                fail_silently=False,
                            )

                        # Replace username with email address
                        user.email = ''.join(user.email.split()).lower()
                        user.username = user.email
                        user.save()




class Migration(migrations.Migration):

    dependencies = [
        ('streamwebs', '0037_approve_users'),
    ]

    operations = [
        migrations.RunPython(username_remove_whitespace)
    ]
